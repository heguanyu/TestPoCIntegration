// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name LinkedinAudienceNetwork
import CommonCrypto
import CoreML
import Foundation
@_exported import LinkedinAudienceNetwork
import Swift
import UIKit
import _Concurrency
import os
@objc(LANLoggerProtocol) public protocol LoggerProtocol {
  @objc func log(level: LinkedinAudienceNetwork.LogLevel, message: Swift.String, file: Swift.String, function: Swift.String, line: Swift.UInt)
}
@objc(LANLogLevel) public enum LogLevel : Swift.Int {
  case info
  case warning
  case error
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(LANAudienceNetwork) @objcMembers public class AudienceNetwork : ObjectiveC.NSObject {
  @objc public static var groupIdentityToken: Swift.String {
    @objc get
  }
  @objc public static func start(configuration: LinkedinAudienceNetwork.AudienceNetworkConfiguration, completion: ((Swift.Error?) -> Swift.Void)?)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(LANAudienceNetworkConfiguration) @objcMembers public class AudienceNetworkConfiguration : ObjectiveC.NSObject {
  @objc final public let key: Swift.String
  @objc final public let logger: LinkedinAudienceNetwork.LoggerProtocol
  @objc convenience public init(key: Swift.String)
  @objc public init(key: Swift.String, logger: LinkedinAudienceNetwork.LoggerProtocol?)
  @objc deinit
}
extension LinkedinAudienceNetwork.LogLevel : Swift.Equatable {}
extension LinkedinAudienceNetwork.LogLevel : Swift.Hashable {}
extension LinkedinAudienceNetwork.LogLevel : Swift.RawRepresentable {}
